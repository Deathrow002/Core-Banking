# ================================
# Application Name and Port
# ================================
server.port=8084
spring.application.name=authentication-service

# ================================
# Eureka Client Configuration
# ================================
eureka.instance.appName=AUTHENTICATION-SERVICE
eureka.client.fetchRegistry=true
eureka.client.healthcheck.enabled=false
eureka.instance.leaseRenewalIntervalInSeconds=10
eureka.instance.leaseExpirationDurationInSeconds=30
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka
eureka.instance.prefer-ip-address=true

# ================================
# PostgreSQL DataSource Configuration
# ================================
spring.datasource.url=jdbc:postgresql://postgres:5432/lmwn_db
spring.datasource.username=lmwn_user
spring.datasource.password=12345678

# ================================
# Hibernate JPA Configuration
# ================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# ================================
# Redis Configuration
# ================================
spring.data.redis.host=redis
spring.data.redis.port=6379
management.health.redis.enabled=false

# ================================
# Actuator Configuration
# ================================
management.endpoint.health.access=read-only
management.endpoint.info.access=read-only
management.endpoints.web.exposure.include=prometheus,health,info
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.prometheus.metrics.export.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# ================================
# JWT Configuration
# ================================
jwt.secret-key=vvfTotBJuNiV12kQjHemly+0ruEhEdapfmki0bZD3E0vvfTotBJuNiV12kQjHemly+0ruEhEdapfmki0bZD3E0=
jwt.expiration=86400000

# ================================
# Kafka Configuration
# ================================
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=${spring.application.name}-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.listener.ack-mode=MANUAL

# ================================
# Docker Compose Profile Activation
# ================================
spring.profiles.active=docker-compose,dev

# ================================
# Default Admin User Configuration
# ================================
app.default-admin.email=admin@example.com
app.default-admin.password=SecureAdminP@ssw0rd!