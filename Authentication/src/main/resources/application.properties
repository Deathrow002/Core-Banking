# ================================
# Application Name and Port
# ================================
server.port=8083
spring.application.name=authentication-service

# ================================
# PostgreSQL DataSource Configuration
# ================================
spring.datasource.url=jdbc:postgresql://localhost:5432/core_bank
spring.datasource.username=lmwn_user
spring.datasource.password=12345678
spring.datasource.driver-class-name=org.postgresql.Driver

# ================================
# Hibernate JPA Configuration
# ================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ================================
# Redis Configuration
# ================================
spring.redis.host=redis
spring.redis.port=6379
management.health.redis.enabled=false

# ================================
# Actuator Configuration
# ================================
management.endpoint.health.access=read-only
management.endpoint.info.access=read-only
management.endpoints.web.exposure.include=prometheus,health,info
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.prometheus.metrics.export.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# ================================
# JWT Configuration
# ================================
security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
security.jwt.expiration-time=86400000

# ================================
# Eureka Server Configuration
# ================================
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=${spring.application.name}-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.listener.ack-mode=MANUAL

# ================================
# Docker Compose Profile Activation
# ================================
spring.profiles.active=docker-compose,dev