version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: lmwn_db
      POSTGRES_USER: lmwn_user
      POSTGRES_PASSWORD: 12345678
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lmwn_user -d lmwn_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s  # Allow PostgreSQL some time to initialize
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  discovery-service:
    build:
      context: ./Discovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - app-network
    environment:
      spring.application.name: discovery-service
      eureka.client.service-url.defaultZone: http://discovery-service:8761/eureka
    command: ["java", "-jar", "/app/discovery-service.jar"]

  account-service:
    build:
      context: ./Account
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_started
    environment:
      spring.application.name: account-service
      spring.datasource.url: jdbc:postgresql://postgres:5432/lmwn_db
      spring.datasource.username: lmwn_user
      spring.datasource.password: 12345678
      eureka.client.service-url.defaultZone: http://discovery-service:8761/eureka
    command: ["java", "-jar", "/app/account-service.jar"]

  transaction-service:
    build:
      context: ./Transaction
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_started
      account-service:
        condition: service_started
    environment:
      spring.application.name: transaction-service
      spring.datasource.url: jdbc:postgresql://postgres:5432/lmwn_db
      spring.datasource.username: lmwn_user
      spring.datasource.password: 12345678
      eureka.client.service-url.defaultZone: http://discovery-service:8761/eureka
    command: ["java", "-jar", "/app/transaction-service.jar"]

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
