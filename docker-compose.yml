services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: lmwn_db
      POSTGRES_USER: lmwn_user
      POSTGRES_PASSWORD: 12345678
    ports:
      - "5432:5432"
    networks:
      - core-bank-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U lmwn_user -d lmwn_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - core-bank-network
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "redis", "-p", "6379", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - redis_data:/data

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - core-bank-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - core-bank-network
    volumes:
      - grafana_data:/var/lib/grafana

  discovery-service:
    build:
      context: .
      dockerfile: Discovery/Dockerfile
    ports:
      - "8761:8761"
    networks:
      - core-bank-network
    environment:
      spring.application.name: discovery-service
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8761/eureka/
    command: ["java", "-jar", "/app/discovery-service.jar"]
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent http://discovery-service:8761/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 300s  # Increase start period to 5 minutes

  account-service:
    build:
      context: .
      dockerfile: Account/Dockerfile
    ports:
      - "8081:8081"
    networks:
      - core-bank-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    environment:
      spring.application.name: account-service
      spring.datasource.url: jdbc:postgresql://postgres:5432/lmwn_db
      spring.datasource.username: lmwn_user
      spring.datasource.password: 12345678
      eureka.client.service-url.defaultZone: http://discovery-service:8761/eureka
      spring.redis.host: redis  # Ensure this is 'redis'
      spring.redis.port: 6379
    command: [ "java", "-jar", "/app/account-service.jar" ]
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  transaction-service:
    build:
      context: .
      dockerfile: Transaction/Dockerfile
    ports:
      - "8082:8082"
    networks:
      - core-bank-network
    depends_on:
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      account-service:
        condition: service_healthy
    environment:
      spring.application.name: transaction-service
      spring.datasource.url: jdbc:postgresql://postgres:5432/lmwn_db
      spring.datasource.username: lmwn_user
      spring.datasource.password: 12345678
      eureka.client.service-url.defaultZone: http://discovery-service:8761/eureka
      spring.redis.host: redis
      spring.redis.port: 6379
    command: ["java", "-jar", "/app/transaction-service.jar"]
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  gateway-service:
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - core-bank-network
    depends_on:
      discovery-service:
        condition: service_healthy
    environment:
      eureka.client.service-url.defaultZone: http://discovery-service:8761/eureka
    command: ["java", "-jar", "/app/gateway-service.jar"]
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  core-bank-network:
    name: core-bank-network
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data_volume
  redis_data:
    name: redis_data_volume
  grafana_data:
    name: grafana_data_volume
