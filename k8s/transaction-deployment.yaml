apiVersion: apps/v1
kind: Deployment
metadata:
  name: transaction-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transaction-service
  template:
    metadata:
      labels:
        app: transaction-service
    spec:
      containers:
        - name: transaction-service
          image: core-bank-transaction-service:latest
          imagePullPolicy: Never  # Prevents Kubernetes from trying to pull the image
          ports:
            - containerPort: 8082
          env:
            - name: spring.application.name
              value: "transaction-service"
            - name: spring.datasource.url
              value: "jdbc:postgresql://postgres:5432/lmwn_db"
            - name: spring.datasource.username
              value: "lmwn_user"
            - name: spring.datasource.password
              value: "12345678"
            - name: eureka.client.service-url.defaultZone
              value: "http://discovery-service:8761/eureka"
            - name: spring.redis.host
              value: "redis"
            - name: spring.redis.port
              value: "6379"
          command: ["java", "-jar", "/app/transaction-service.jar"]
---
apiVersion: v1
kind: Service
metadata:
  name: transaction-service
spec:
  type: ClusterIP
  ports:
    - port: 8082
      targetPort: 8082
  selector:
    app: transaction-service
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: transaction-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: transaction.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: transaction-service
                port:
                  number: 8082