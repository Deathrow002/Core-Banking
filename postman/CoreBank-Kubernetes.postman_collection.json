{
	"info": {
		"_postman_id": "90af3104-f39a-4115-a7cc-90d5df610cff",
		"name": "Core Bank - Kubernetes",
		"description": "Core Bank API collection for Kubernetes deployment (Ingress-based endpoints)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9786851",
		"_collection_link": "https://bold-robot-838254.postman.co/workspace/RCP~2b6480ec-cf62-4b3f-b0b3-9ba00fe19c3f/collection/9786851-90af3104-f39a-4115-a7cc-90d5df610cff?action=share&source=collection_link&creator=9786851"
	},
	"item": [
		{
			"name": "üîê Authentication Service",
			"item": [
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('Response status:', pm.response.code);",
									"console.log('Response body:', pm.response.text());",
									"",
									"if (pm.response.code === 200) {",
									"    try {",
									"        const response = pm.response.json();",
									"        console.log('Parsed response:', response);",
									"        ",
									"        if (response.token) {",
									"            pm.environment.set('authToken', response.token);",
									"            console.log('Auth token saved to environment:', response.token);",
									"        } else {",
									"            console.log('No token found in response');",
									"        }",
									"    } catch (e) {",
									"        console.log('Error parsing response:', e);",
									"    }",
									"} else {",
									"    console.log('Login failed with status:', pm.response.code);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{authServiceUrl}}/api/v1/auth/login?email=admin@example.com&password=SecureAdminP@ssw0rd!",
							"host": [
								"{{authServiceUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							],
							"query": [
								{
									"key": "email",
									"value": "admin@example.com"
								},
								{
									"key": "password",
									"value": "SecureAdminP@ssw0rd!"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Client Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('Response status:', pm.response.code);",
									"console.log('Response body:', pm.response.text());",
									"",
									"if (pm.response.code === 200) {",
									"    try {",
									"        const response = pm.response.json();",
									"        console.log('Parsed response:', response);",
									"        ",
									"        if (response.token) {",
									"            pm.environment.set('authToken', response.token);",
									"            console.log('Auth token saved to environment:', response.token);",
									"        } else {",
									"            console.log('No token found in response');",
									"        }",
									"    } catch (e) {",
									"        console.log('Error parsing response:', e);",
									"    }",
									"} else {",
									"    console.log('Login failed with status:', pm.response.code);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{authServiceUrl}}/api/v1/auth/login?email={{email}}&password=123456",
							"host": [
								"{{authServiceUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							],
							"query": [
								{
									"key": "email",
									"value": "{{email}}"
								},
								{
									"key": "password",
									"value": "123456"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{authServiceUrl}}/api/v1/auth/register",
							"host": [
								"{{authServiceUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{authServiceUrl}}/api/v1/auth/validate",
							"host": [
								"{{authServiceUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authServiceUrl}}/actuator/health",
							"host": [
								"{{authServiceUrl}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üë§ Customer Service",
			"item": [
				{
					"name": "Create Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201 || pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.customerId) {",
									"        pm.collectionVariables.set('customerId', response.customerId);",
									"        console.log('Customer ID saved:', response.customerId);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"{{email}}\",\n  \"phoneNumber\": \"{{phoneNumber}}\",\n  \"nationalId\": \"123456789\",\n  \"dateOfBirth\": \"1990-01-01\",\n  \"status\": \"Active\",\n  \"addresses\": [\n    {\n      \"address\": \"123 Main St\",\n      \"subDistrict\": \"Downtown\",\n      \"district\": \"Central\",\n      \"city\": \"Springfield\",\n      \"country\": \"USA\",\n      \"zipCode\": \"62701\",\n      \"addressType\": \"Present\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{customerServiceUrl}}/customers",
							"host": [
								"{{customerServiceUrl}}"
							],
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{customerServiceUrl}}/customers?customerId={{customerId}}",
							"host": [
								"{{customerServiceUrl}}"
							],
							"path": [
								"customers"
							],
							"query": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Customers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{customerServiceUrl}}/customers/all",
							"host": [
								"{{customerServiceUrl}}"
							],
							"path": [
								"customers",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Customer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"email\": \"{{email}}\",\n  \"phoneNumber\": \"{{phoneNumber}}\",\n  \"nationalId\": \"123456789\",\n  \"dateOfBirth\": \"1990-01-01\",\n  \"status\": \"Active\"\n}"
						},
						"url": {
							"raw": "{{customerServiceUrl}}/customers",
							"host": [
								"{{customerServiceUrl}}"
							],
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{customerServiceUrl}}/customers?customerId={{customerId}}",
							"host": [
								"{{customerServiceUrl}}"
							],
							"path": [
								"customers"
							],
							"query": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{customerServiceUrl}}/actuator/health",
							"host": [
								"{{customerServiceUrl}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üè¶ Account Service",
			"item": [
				{
					"name": "Create Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201 || pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.accountId) {",
									"        pm.collectionVariables.set('accountNumber', response.accountId);",
									"        console.log('Account ID saved:', response.accountId);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"balance\": 1000.00,\n  \"currency\": \"USD\"\n}"
						},
						"url": {
							"raw": "{{accountServiceUrl}}/accounts/createAccount",
							"host": [
								"{{accountServiceUrl}}"
							],
							"path": [
								"accounts",
								"createAccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account by Number",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{accountServiceUrl}}/accounts/getAccount?accNo={{accountNumber}}",
							"host": [
								"{{accountServiceUrl}}"
							],
							"path": [
								"accounts",
								"getAccount"
							],
							"query": [
								{
									"key": "accNo",
									"value": "{{accountNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Accounts by Customer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{accountServiceUrl}}/accounts/customer?customerId={{customerId}}",
							"host": [
								"{{accountServiceUrl}}"
							],
							"path": [
								"accounts",
								"customer"
							],
							"query": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{accountServiceUrl}}/accounts/getAllAccounts",
							"host": [
								"{{accountServiceUrl}}"
							],
							"path": [
								"accounts",
								"getAllAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account Balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{accountServiceUrl}}/accounts/balance?accountNumber={{accountNumber}}",
							"host": [
								"{{accountServiceUrl}}"
							],
							"path": [
								"accounts",
								"balance"
							],
							"query": [
								{
									"key": "accountNumber",
									"value": "{{accountNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Account Status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountNumber\": \"{{accountNumber}}\",\n  \"status\": \"ACTIVE\"\n}"
						},
						"url": {
							"raw": "{{accountServiceUrl}}/accounts/status",
							"host": [
								"{{accountServiceUrl}}"
							],
							"path": [
								"accounts",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Close Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{accountServiceUrl}}/accounts?accountNumber={{accountNumber}}",
							"host": [
								"{{accountServiceUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "accountNumber",
									"value": "{{accountNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{accountServiceUrl}}/actuator/health",
							"host": [
								"{{accountServiceUrl}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üí∞ Transaction Service",
			"item": [
				{
					"name": "Create Transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accNoOwner\": \"{{customerId}}\",\n  \"accNoReceive\": \"{{customerId}}\",\n  \"amount\": 50.00\n}"
						},
						"url": {
							"raw": "{{transactionServiceUrl}}/transactions/transaction",
							"host": [
								"{{transactionServiceUrl}}"
							],
							"path": [
								"transactions",
								"Transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountNumber\": \"{{accountNumber}}\",\n  \"amount\": 500.00\n}"
						},
						"url": {
							"raw": "{{transactionServiceUrl}}/transactions/deposit",
							"host": [
								"{{transactionServiceUrl}}"
							],
							"path": [
								"transactions",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountNumber\": \"{{accountNumber}}\",\n  \"amount\": 50.00\n}"
						},
						"url": {
							"raw": "{{transactionServiceUrl}}/transactions/withdraw",
							"host": [
								"{{transactionServiceUrl}}"
							],
							"path": [
								"transactions",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transaction by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{transactionServiceUrl}}/transactions/GetTransByAccNo?AccNo={{accountNumber}}",
							"host": [
								"{{transactionServiceUrl}}"
							],
							"path": [
								"transactions",
								"GetTransByAccNo"
							],
							"query": [
								{
									"key": "AccNo",
									"value": "{{accountNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{transactionServiceUrl}}/actuator/health",
							"host": [
								"{{transactionServiceUrl}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîç Discovery Service",
			"item": [
				{
					"name": "Eureka Dashboard",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{discoveryServiceUrl}}/",
							"host": [
								"{{discoveryServiceUrl}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Service Registry Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{discoveryServiceUrl}}/eureka/apps",
							"host": [
								"{{discoveryServiceUrl}}"
							],
							"path": [
								"eureka",
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{discoveryServiceUrl}}/actuator/health",
							"host": [
								"{{discoveryServiceUrl}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîÑ Complete Workflow (Kubernetes)",
			"item": [
				{
					"name": "1. Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.environment.set('authToken', response.token);",
									"        console.log('‚úÖ Admin authenticated successfully');",
									"    }",
									"} else {",
									"    console.log('‚ùå Admin authentication failed');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{authServiceUrl}}/api/v1/auth/login?email=admin@example.com&password=SecureAdminP@ssw0rd!",
							"host": [
								"{{authServiceUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							],
							"query": [
								{
									"key": "email",
									"value": "admin@example.com"
								},
								{
									"key": "password",
									"value": "SecureAdminP@ssw0rd!"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Create Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201 || pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.customerId) {",
									"        pm.collectionVariables.set('customerId', response.customerId);",
									"        console.log('‚úÖ Customer created:', response.customerId);",
									"    }",
									"} else {",
									"    console.log('‚ùå Customer creation failed');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"{{email}}\",\n  \"phoneNumber\": \"{{phoneNumber}}\",\n  \"nationalId\": \"123456789\",\n  \"dateOfBirth\": \"1990-01-01\",\n  \"status\": \"Active\",\n  \"addresses\": [\n    {\n      \"address\": \"123 Main St\",\n      \"subDistrict\": \"Downtown\",\n      \"district\": \"Central\",\n      \"city\": \"Springfield\",\n      \"country\": \"USA\",\n      \"zipCode\": \"62701\",\n      \"addressType\": \"Present\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{customerServiceUrl}}/customers",
							"host": [
								"{{customerServiceUrl}}"
							],
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Create Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201 || pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.accountId) {",
									"        pm.collectionVariables.set('accountNumber', response.accountId);",
									"        console.log('‚úÖ Account created:', response.accountId);",
									"    }",
									"} else {",
									"    console.log('‚ùå Account creation failed');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"balance\": 1000.00,\n  \"currency\": \"USD\"\n}"
						},
						"url": {
							"raw": "{{accountServiceUrl}}/accounts/createAccount",
							"host": [
								"{{accountServiceUrl}}"
							],
							"path": [
								"accounts",
								"createAccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Make Deposit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    console.log('‚úÖ Deposit completed successfully');",
									"} else {",
									"    console.log('‚ùå Deposit failed');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountNumber\": \"{{accountNumber}}\",\n  \"amount\": 500.00,\n  \"currency\": \"USD\",\n  \"transactionType\": \"DEPOSIT\",\n  \"description\": \"Initial deposit via Kubernetes\"\n}"
						},
						"url": {
							"raw": "{{transactionServiceUrl}}/transactions/deposit",
							"host": [
								"{{transactionServiceUrl}}"
							],
							"path": [
								"transactions",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Check Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    console.log('‚úÖ Current balance:', response.balance || 'N/A');",
									"} else {",
									"    console.log('‚ùå Balance check failed');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{accountServiceUrl}}/accounts/balance?accountNumber={{accountNumber}}",
							"host": [
								"{{accountServiceUrl}}"
							],
							"path": [
								"accounts",
								"balance"
							],
							"query": [
								{
									"key": "accountNumber",
									"value": "{{accountNumber}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://core-bank.local",
			"type": "string"
		},
		{
			"key": "accountServiceUrl",
			"value": "http://account.core-bank.local",
			"type": "string"
		},
		{
			"key": "customerServiceUrl",
			"value": "http://customer.core-bank.local",
			"type": "string"
		},
		{
			"key": "transactionServiceUrl",
			"value": "http://transaction.core-bank.local",
			"type": "string"
		},
		{
			"key": "authServiceUrl",
			"value": "http://auth.core-bank.local",
			"type": "string"
		},
		{
			"key": "discoveryServiceUrl",
			"value": "http://discovery.core-bank.local",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "customerId",
			"value": "",
			"type": "string"
		},
		{
			"key": "accountNumber",
			"value": "",
			"type": "string"
		},
		{
			"key": "email",
			"value": "john.doe@example.com",
			"type": "string"
		},
		{
			"key": "phoneNumber",
			"value": "1234567890",
			"type": "string"
		}
	]
}