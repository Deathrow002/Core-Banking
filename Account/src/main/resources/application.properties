# Application name
spring.application.name=account-service
server.port=8081

# Eureka Client Configuration
eureka.instance.appName=ACCOUNT-SERVICE
eureka.client.fetchRegistry=true
eureka.client.healthcheck.enabled=false
eureka.instance.leaseRenewalIntervalInSeconds=10
eureka.instance.leaseExpirationDurationInSeconds=30
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka
eureka.instance.prefer-ip-address=true

# PostgreSQL DataSource Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/lmwn_db
spring.datasource.username=lmwn_user
spring.datasource.password=12345678

# Hibernate JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Redis Configuration
spring.redis.host=redis
spring.redis.port=6379
management.health.redis.enabled=false

# Actuator Configuration
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true
management.endpoints.web.exposure.include=prometheus,health,info
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Docker Compose Profile Activation
spring.profiles.active=docker-compose,dev

# Spring Boot Logging
#logging.level.org.springframework.data.redis=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.org.apache.kafka=DEBUG
#logging.level.org.springframework.kafka=DEBUG

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=account-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer